summary: Ensure that an upgrade to broken systemd reverts to good core

systems: [ubuntu-core-16-64]

execute: |
    if [ "$SPREAD_REBOOT" = 0 ]; then
        snap list|grep ubuntu-core|tr -s " "|cut -f3 -d' ' > firstBoot 

        echo "Break ubuntu-core by destroying systemd"
        unsquashfs -d /tmp/ubuntu-core-broken /var/lib/snapd/snaps/ubuntu-core_$(cat firstBoot).snap 
        rm -rf /tmp/ubuntu-core-broken/lib/systemd
        snapbuild /tmp/ubuntu-core-broken /tmp/
        
        echo "Install a broken ubuntu-core"
        snap install /tmp/ubuntu-core_*.snap
        snap list|grep ubuntu-core|tr -s " "|cut -f3 -d' ' > nextBoot 

        REBOOT
    fi

    if [ "$SPREAD_REBOOT" = 1 ]; then
        echo "Waiting for boot-ok to finish"
        while ! systemctl status snapd.boot-ok|grep SUCCESS; do
            echo "Show debug info"
            systemctl status snapd.boot-ok || true
            sleep 1
        done

        echo "Useful debug info"
        grub-editenv list
        cat /proc/cmdline

        echo "Ensure we booted from the newly installed core snap"
        grep "snap_core=ubuntu-core_$(cat firstBoot).snap" /proc/cmdline
        echo "Ensure the bootloader is correct after reboot"
        grub-editenv list | grep "snap_core=ubuntu-core_$(cat firstBoot).snap"
        grub-editenv list | grep '^snap_try_core=$'
        grub-editenv list | grep '^snap_mode=$'

        echo "Ensure the snap list contains out initial ubuntu-core snap"
        snap list |grep "ubuntu-core.*$(cat firstBoot)"
    fi
